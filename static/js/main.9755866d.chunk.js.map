{"version":3,"sources":["firebase.js","panels/NewApp/Home.js","panels/NewApp/TestFeed.js","panels/Profile/Settings.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Home","_ref","id","go","fetchedUser","react_default","a","createElement","es6","left","onClick","data-to","settings_default","title","before","photo_200","src","description","concat","first_name","last_name","disabled","size","level","header","mode","gallery_default","ghost_outline_default","width","height","water_drop_outline_default","attachments_default","TestFeed","thematics","map","thematic","key","name","Settings","App","_useState","useState","_useState2","Object","slicedToArray","activePanel","setActivePanel","_useState3","_useState4","setUser","_React$useState","React","_React$useState2","setSkins","_useState5","_useState6","scheme","SetScheme","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","user","wrap","_context","prev","next","bridge","send","sent","stop","apply","this","arguments","fetchData","subscribe","_ref$detail","detail","type","data","_ref2","_callee2","db","_context2","firestore","collection","get","docs","doc","e","currentTarget","dataset","to","NewApp_Home","NewApp_TestFeed","Profile_Settings","root","document","getElementById","platform","IOS","mVKMiniAppsScrollHelper","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.9755866d.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDXd6SmSqgk9QuQ1iinE3H4pllVQeHU6l4\",\r\n    authDomain: \"nebuskins-app.firebaseapp.com\",\r\n    databaseURL: \"https://nebuskins-app.firebaseio.com\",\r\n    projectId: \"nebuskins-app\",\r\n    storageBucket: \"nebuskins-app.appspot.com\",\r\n    messagingSenderId: \"187465077436\",\r\n    appId: \"1:187465077436:web:31c639de854663bc3bf6b9\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(config);\r\n  \r\n\r\n  export default firebase;\r\n ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Panel, PanelHeader, Button, CellButton, Group, Cell, Div, Avatar, Header, PanelHeaderButton} from '@vkontakte/vkui';\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\n\r\n\r\nimport Icon28GhostOutline from '@vkontakte/icons/dist/28/ghost_outline';\r\nimport Icon24Attachments from '@vkontakte/icons/dist/24/attachments';\r\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Gallery from '@vkontakte/icons/dist/24/gallery';\r\nimport Icon28WaterDropOutline from '@vkontakte/icons/dist/28/water_drop_outline';\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader left={<PanelHeaderButton onClick={go} data-to=\"settings\" ><Icon24Settings/></PanelHeaderButton>}>Каталог скинов</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription=\"Добро пожаловать!\"\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\r\n\t\t<Group title=\"Navigation Example\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button disabled size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\r\n\t\t\t\t\tПока ничего не делает\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n    <Group header={<Header mode=\"secondary\">Выберите категорию</Header>}>\r\n      <CellButton onClick={go} data-to=\"def_skins\" before={<Icon24Gallery />}>Обычные скины</CellButton>\r\n      <CellButton before={<Icon28GhostOutline width={24} height={24} />}>Питомцы</CellButton>\r\n      <CellButton before={<Icon28WaterDropOutline width={24} height={24} />}>Частицы</CellButton>\r\n      <CellButton before={<Icon24Attachments />}>Собственный фон</CellButton>\r\n    </Group>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t}),\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport PropTypes from 'prop-types';\r\nimport { Div, PanelHeaderButton, Search, List, Button, Header, Group, PanelHeader, Panel, Cell, PanelHeaderBack } from '@vkontakte/vkui';\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\n\r\nimport Icon24ThumbUp from '@vkontakte/icons/dist/24/thumb_up';\r\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\r\n\r\n// function TestFeed(props) {\r\n//     const [skins, setSkins] = React.useState([])\r\n\r\n//     React.useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             const db = firebase.firestore()\r\n//             const data = await db.collection(\"skins\").get()\r\n//             setSkins(data.docs.map(doc => doc.data()))\r\n//         }\r\n//         fetchData()\r\n//     }, [])\r\n\r\n\r\n//     return (\r\n//      <React.Fragment> \r\n                 \r\n//             {skins.map(skin => (\r\n// <Div key={skin.id}>\r\n//  <Banner style={{ blockSize: 95 }} size=\"l\"\r\n//         before={<Avatar size={96} mode=\"image\" src={skin.image} />}\r\n//         header={<React.Fragment>Предложил: {skin.nickname}</React.Fragment>}\r\n//         subheader={<React.Fragment>ID игрока: {skin.player_id}<br/>Категория: {skin.category}</React.Fragment>}\r\n//         // text={<Button after={skin.likes} mode=\"tertiary\" style={{ width: 10, height: 30 }}><Icon24ThumbUp style={{ width: 5, height: 5 }}/></Button>}\r\n//       />\r\n// </Div>\r\n// ))}\r\n//         </React.Fragment>\r\n//     );\r\n//             }\r\n// TestFeed.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\n\r\nconst TestFeed = ({ id, go, fetchedUser, thematics }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>}>Обычные скины</PanelHeader>\r\n\t\t{/* {fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>} */}\r\n\r\n\t\t{/* <Group title=\"thematics\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\r\n\t\t\t\t\tShow me the Persik, please\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n    <Group header={<Header mode=\"secondary\">Выберите категорию</Header>}>\r\n        \r\n    </Group> */}\r\n     <List>\r\n              {thematics.map(thematic => <Cell key={thematic.id}>{thematic.name}</Cell>)}\r\n            </List>\r\n\t</Panel>\r\n);\r\n\r\n// class Thematics extends React.Component {\r\n\r\n//     constructor (props) {\r\n//       super(props);\r\n//       this.state = {\r\n//         search: ''\r\n//       }\r\n//       this.onChange = this.onChange.bind(this);\r\n//     }\r\n\r\n//     onChange (e) { this.setState({ search: e.target.value }); }\r\n\r\n//     get thematics () {\r\n//       const search = this.state.search.toLowerCase();\r\n//       return thematics.filter(({name}) => name.toLowerCase().indexOf(search) > -1);\r\n//     }\r\n\r\n//     render() {\r\n//       return (\r\n//         <React.Fragment>\r\n//           <PanelHeader\r\n//             right={<PanelHeaderButton onClick={this.props.goHeaderSearch}><Icon28AddOutline /></PanelHeaderButton>}\r\n//             separator={false}\r\n//           >\r\n//             Выбор тематики\r\n//           </PanelHeader>\r\n//           <Search value={this.state.search} onChange={this.onChange} after={null}/>\r\n//           {this.thematics.length > 0 &&\r\n//             <List>\r\n//               {this.thematics.map(thematic => <Cell key={thematic.id}>{thematic.name}</Cell>)}\r\n//             </List>\r\n//           }\r\n//         </React.Fragment>\r\n//       );\r\n//     }\r\n//   }\r\n\r\nTestFeed.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TestFeed;","import React from 'react';\r\nimport firebase from 'firebase';\r\nimport PropTypes from 'prop-types';\r\nimport {Avatar, Group, PanelHeader, Panel, Cell, PanelHeaderBack } from '@vkontakte/vkui';\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\n\r\n\r\n\r\n\r\n\r\nconst Settings = ({ id, go, fetchedUser, thematics }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>}>Настройки</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription=\"Не забудьте подписаться на сообщество\"\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n</Panel>\r\n);\r\n\r\nSettings.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n  }),\r\n}\r\n\r\nexport default Settings;","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {View, ConfigProvider} from '@vkontakte/vkui';\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\n\r\nimport firebase from './firebase';\r\n\r\nimport Home from './panels/NewApp/Home';\r\nimport TestFeed from './panels/NewApp/TestFeed';\r\nimport Settings from './panels/Profile/Settings';\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n  const [fetchedUser, setUser] = useState(null);\r\n  const [skins, setSkins] = React.useState([])\r\n  const thematics = [\r\n    {id: 1, name: \"Аниме\"},\r\n    {id: 2, name: \"Животные\"},\r\n  ];\r\n  const [scheme, SetScheme] = useState(\"space_gray\");\r\n\r\n\tuseEffect(() => {\r\n\t\t// bridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t}\r\n\t\tfetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    bridge.subscribe(({ detail: { type, data }}) => {\r\n    if (type === 'VKWebAppUpdateConfig') {\r\n      SetScheme(data.scheme)\r\n    }\r\n  });\r\n  }, []);\r\n  \r\n  \r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n        const db = firebase.firestore()\r\n        const data = await db.collection(\"skins\").get()\r\n        setSkins(data.docs.map(doc => doc.data()))\r\n    }\r\n    fetchData()\r\n}, [])\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n    <ConfigProvider scheme={scheme} >\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t<TestFeed id='def_skins' thematics={thematics} go={go} />\r\n      <Settings id=\"settings\" go={go} />\r\n\t\t</View>\r\n    </ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport mVKMiniAppsScrollHelper from '@vkontakte/mvk-mini-apps-scroll-helper';\r\nimport {platform, IOS} from '@vkontakte/vkui';\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\n\r\nbridge.send('VKWebAppInit', {}); // Запусааем приложение\r\nconst root = document.getElementById('root');\r\nif(platform() === IOS) {\r\n    mVKMiniAppsScrollHelper(root); // Добавляем скролхелпер для Safari\r\n}\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}