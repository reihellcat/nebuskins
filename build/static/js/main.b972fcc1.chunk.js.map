{"version":3,"sources":["panels/Settings.js","panels/Main.js","App.js","index.js"],"names":["Settings","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","scheme","_this2","connect","subscribe","_ref","_ref$detail","detail","type","data","setState","send","status_bar_style","action_bar_color","_this3","react_default","a","createElement","es6","asideContent","onClick","UpdateTheme","size","mode","React","Component","Main","src","width","height","margintop","alt","href","App","onStoryChange","e","activeStory","currentTarget","dataset","story","tabbar","selected","data-story","text","newsfeed_outline_default","add_outline_default","label","settings_outline_default","View_default","id","activePanel","panels_Main","panels_Settings","bridge","root","document","getElementById","platform","IOS","mVKMiniAppsScrollHelper","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.b972fcc1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { View, Card, CardGrid, Panel, PanelHeader, Group, Cell, Switch, Button, Div } from '@vkontakte/vkui';\r\nimport connect from '@vkontakte/vkui-connect'; // VK Connect\r\nimport {ConfigProvider} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css'; // Импортируем css\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scheme: \"bright_light\" // Если не придет тема - ставим эту по умолчанию.\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        connect.subscribe(({ detail: { type, data }}) => { // Подписываемся на события.\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') { // Получаем тему клиента.\r\n                this.setState({scheme: data.scheme})\r\n            }\r\n        })\r\n        //  Добавляем обработчик события изменения истории для работы аппаратных кнопок.\r\n    }\r\n\r\n    UpdateTheme() {\r\n        if(this.state.scheme === \"bright_light\" || this.state.scheme === \"client_light\"){ // Если в стейте эти темы: \r\n            this.setState({scheme: 'space_gray'}); // меняем тему на альтернативную.\r\n            connect.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#000\"}); // Устанавливаем цвет статус бара на белый и экшен бара на черный.\r\n\t} else if(this.state.scheme === \"space_gray\" || this.state.scheme === \"client_dark\") {\r\n            this.setState({scheme: 'bright_light'}); // меняем тему на альтернативную.\r\n            connect.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"dark\", \"action_bar_color\": \"#fff\"}); // Устанавливаем цвет статус бара на черный и экшен бара на белый.\r\n        }\r\n     }\r\n    \r\n    render() {\r\n        return(\r\n            // scheme - это тема, которую мы ставим в приложением\r\n            <ConfigProvider scheme={this.state.scheme}> \r\n            <Div>\r\n            <Cell asideContent={<Switch />} onClick={() => this.UpdateTheme()}>\r\n          Темная тема\r\n        </Cell>\r\n        <Button onClick={() => this.UpdateTheme()} size=\"xl\" mode=\"secondary\">Сменить тему на альтернативную</Button>\r\n        </Div>\r\n            </ConfigProvider>\r\n        );\r\n    }\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport { View, Card, CardGrid, Panel, PanelHeader, Group, Button, Div } from '@vkontakte/vkui';\r\n\r\n\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n          <Div>\r\n         <PanelHeader>\r\n          Главная  \r\n</PanelHeader>\r\n<img src=\"https://sun9-63.userapi.com/c857020/v857020827/13946f/aMol-HoR2Fw.jpg\" width=\"100%\" height=\"100%\" margintop=\"25px\" alt=\"desc\"/>\r\n<Button size=\"xl\" mode=\"secondary\" href=\"https://vk.com/nebulous\">Перейти в группу</Button>\r\n    </Div>\r\n        )\r\n    \r\n    }\r\n}\r\n\r\nexport default Main;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { Panel, PanelHeader, Tabbar, TabbarItem, Epic } from '@vkontakte/vkui';\r\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline';\r\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\r\n\r\nimport Settings from './panels/Settings';\r\nimport Main from './panels/Main';\r\n\r\nclass App extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\t\tscheme: \"bright_light\",\r\n\t\t\t\tactiveStory: 'feed'\r\n\t\t};\r\n\r\n\r\n\r\n}\r\n\r\nonStoryChange = (e) => {\r\n\tthis.setState({ activeStory: e.currentTarget.dataset.story })\r\n}\r\n\r\n    render () {\r\n      return (\r\n        <Epic activeStory={this.state.activeStory} scheme={this.state.scheme} tabbar={\r\n          <Tabbar>\r\n            <TabbarItem\r\n              onClick={this.onStoryChange}\r\n              selected={this.state.activeStory === 'feed'}\r\n              data-story=\"feed\"\r\n              text=\"Главная\"\r\n            ><Icon28NewsfeedOutline /></TabbarItem>\r\n            <TabbarItem\r\n              onClick={this.onStoryChange}\r\n              selected={this.state.activeStory === 'add_skin'}\r\n              data-story=\"add_skin\"\r\n              text=\"Добавить скин\"\r\n            ><Icon28AddOutline /></TabbarItem>\r\n            <TabbarItem\r\n              onClick={this.onStoryChange}\r\n              selected={this.state.activeStory === 'settings'}\r\n              data-story=\"settings\"\r\n              label=\"12\"\r\n              text=\"Настройки\"\r\n            ><Icon28SettingsOutline /></TabbarItem>\r\n          </Tabbar>\r\n        }>\r\n          <View id=\"feed\" activePanel=\"feed\">\r\n            <Panel id=\"feed\">\r\n\t\t\t\t\t\t\t<Main />\r\n            </Panel>\r\n          </View>\r\n          <View id=\"add_skin\" activePanel=\"add_skin\">\r\n            <Panel id=\"add_skin\">\r\n              <PanelHeader>Добавить скин</PanelHeader>\r\n            </Panel>\r\n          </View>\r\n          <View id=\"settings\" activePanel=\"settings\">\r\n            <Panel id=\"settings\">\r\n            <PanelHeader>Настройки</PanelHeader>\r\n\t\t\t\t\t\t\t<Settings />\r\n            </Panel>\r\n          </View>\r\n        </Epic>\r\n      )\r\n    }\r\n}\r\n  export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport App from './App.js';\r\nimport mVKMiniAppsScrollHelper from '@vkontakte/mvk-mini-apps-scroll-helper';\r\nimport {platform, IOS} from '@vkontakte/vkui';\r\n\r\nbridge.send('VKWebAppInit', {}); // Запусааем приложение\r\nconst root = document.getElementById('root');\r\nif(platform() === IOS) {\r\n    mVKMiniAppsScrollHelper(root); // Добавляем скролхелпер для Safari\r\n}\r\nReactDOM.render(<App />, root);"],"sourceRoot":""}