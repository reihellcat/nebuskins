{"version":3,"sources":["../../../../src/components/ConfigProvider/ConfigProvider.tsx"],"names":["React","canUseDOM","PropTypes","Appearance","ConfigProviderContext","Scheme","WebviewType","vkBridge","ConfigProvider","props","setScheme","scheme","DEPRECATED_CLIENT_LIGHT","BRIGHT_LIGHT","DEPRECATED_CLIENT_DARK","SPACE_GRAY","document","body","setAttribute","prevProps","mapOldScheme","isWebView","webviewType","appearance","app","getChildContext","children","Component","VKAPPS","LIGHT","bool","oneOf","INTERNAL","DARK","string"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,SAAP,MAAqC,YAArC;AACA,SACEC,UADF,EAEEC,qBAFF,EAIEC,MAJF,EAKEC,WALF,QAMO,yBANP;AAQA,OAAOC,QAAP,MAA+C,sBAA/C;;IAYqBC,c;;;;;AACnB,0BAAYC,KAAZ,EAAwC;AAAA;;AAAA;;AACtC,8BAAMA,KAAN;;AACA,QAAIR,SAAJ,EAAe;AACb,YAAKS,SAAL,CAAeD,KAAK,CAACE,MAArB;AACD;;AAJqC;AAKvC;;;;iCAsBYA,M,EAAoD;AAC/D,cAAQA,MAAR;AACE,aAAKN,MAAM,CAACO,uBAAZ;AACE,iBAAOP,MAAM,CAACQ,YAAd;;AACF,aAAKR,MAAM,CAACS,sBAAZ;AACE,iBAAOT,MAAM,CAACU,UAAd;;AACF;AACE,iBAAOJ,MAAP;AANJ;AAQD;;;8BAESA,M,EAAoC;AAC5CK,MAAAA,QAAQ,CAACC,IAAT,CAAcC,YAAd,CAA2B,QAA3B,EAAqCP,MAArC;AACD;;;uCAEkBQ,S,EAAgC;AACjD,UAAIA,SAAS,CAACR,MAAV,KAAqB,KAAKF,KAAL,CAAWE,MAApC,EAA4C;AAC1C,aAAKD,SAAL,CAAe,KAAKU,YAAL,CAAkB,KAAKX,KAAL,CAAWE,MAA7B,CAAf;AACD;AACF;;;sCAEsC;AACrC,aAAO;AACLU,QAAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWY,SADjB;AAELC,QAAAA,WAAW,EAAE,KAAKb,KAAL,CAAWa,WAFnB;AAGLX,QAAAA,MAAM,EAAE,KAAKS,YAAL,CAAkB,KAAKX,KAAL,CAAWE,MAA7B,CAHH;AAILY,QAAAA,UAAU,EAAE,KAAKd,KAAL,CAAWc,UAJlB;AAKLC,QAAAA,GAAG,EAAE,KAAKf,KAAL,CAAWe;AALX,OAAP;AAOD;;;6BAEQ;AACP,0BACE,oBAAC,qBAAD,CAAuB,QAAvB;AAAgC,QAAA,KAAK,EAAE,KAAKC,eAAL;AAAvC,SACG,KAAKhB,KAAL,CAAWiB,QADd,CADF;AAKD;;;;EAjEyC1B,KAAK,CAAC2B,S;;gBAA7BnB,c,kBAQwB;AACzCc,EAAAA,WAAW,EAAEhB,WAAW,CAACsB,MADgB;AAEzCP,EAAAA,SAAS,EAAEd,QAAQ,CAACc,SAAT,EAF8B;AAGzCV,EAAAA,MAAM,EAAEN,MAAM,CAACQ,YAH0B;AAIzCU,EAAAA,UAAU,EAAEpB,UAAU,CAAC0B;AAJkB,C;;gBARxBrB,c,uBAewC;AACzDa,EAAAA,SAAS,EAAEnB,SAAS,CAAC4B,IADoC;AAEzDnB,EAAAA,MAAM,EAAET,SAAS,CAAC6B,KAAV,CAAgB,CACtB1B,MAAM,CAACU,UADe,EAEtBV,MAAM,CAACQ,YAFe,EAGtBR,MAAM,CAACS,sBAHe,EAItBT,MAAM,CAACO,uBAJe,CAAhB,CAFiD;AAQzDU,EAAAA,WAAW,EAAEpB,SAAS,CAAC6B,KAAV,CAAgB,CAACzB,WAAW,CAACsB,MAAb,EAAqBtB,WAAW,CAAC0B,QAAjC,CAAhB,CAR4C;AASzDT,EAAAA,UAAU,EAAErB,SAAS,CAAC6B,KAAV,CAAgB,CAAC5B,UAAU,CAAC8B,IAAZ,EAAkB9B,UAAU,CAAC0B,KAA7B,CAAhB,CAT6C;AAUzDL,EAAAA,GAAG,EAAEtB,SAAS,CAACgC;AAV0C,C;;SAfxC1B,c","sourcesContent":["import React from 'react';\nimport { canUseDOM } from '../../lib/dom';\nimport PropTypes, { Validator } from 'prop-types';\nimport {\n  Appearance,\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  Scheme,\n  WebviewType,\n} from './ConfigProviderContext';\nimport { HasChildren } from '../../types';\nimport vkBridge, { AppearanceSchemeType } from '@vkontakte/vk-bridge';\n\nexport interface ConfigProviderProps extends ConfigProviderContextInterface, HasChildren {}\n\nexport interface ConfigProviderChildContextType {\n  isWebView: Validator<boolean>;\n  scheme: Validator<Scheme>;\n  webviewType: Validator<WebviewType>;\n  appearance: Validator<Appearance>;\n  app: Validator<string>;\n}\n\nexport default class ConfigProvider extends React.Component<ConfigProviderProps> {\n  constructor(props: ConfigProviderProps) {\n    super(props);\n    if (canUseDOM) {\n      this.setScheme(props.scheme);\n    }\n  }\n\n  static defaultProps: ConfigProviderProps = {\n    webviewType: WebviewType.VKAPPS,\n    isWebView: vkBridge.isWebView(),\n    scheme: Scheme.BRIGHT_LIGHT,\n    appearance: Appearance.LIGHT,\n  };\n\n  static childContextTypes: ConfigProviderChildContextType = {\n    isWebView: PropTypes.bool,\n    scheme: PropTypes.oneOf([\n      Scheme.SPACE_GRAY,\n      Scheme.BRIGHT_LIGHT,\n      Scheme.DEPRECATED_CLIENT_DARK,\n      Scheme.DEPRECATED_CLIENT_LIGHT,\n    ]),\n    webviewType: PropTypes.oneOf([WebviewType.VKAPPS, WebviewType.INTERNAL]),\n    appearance: PropTypes.oneOf([Appearance.DARK, Appearance.LIGHT]),\n    app: PropTypes.string,\n  };\n\n  mapOldScheme(scheme: AppearanceSchemeType): AppearanceSchemeType {\n    switch (scheme) {\n      case Scheme.DEPRECATED_CLIENT_LIGHT:\n        return Scheme.BRIGHT_LIGHT;\n      case Scheme.DEPRECATED_CLIENT_DARK:\n        return Scheme.SPACE_GRAY;\n      default:\n        return scheme;\n    }\n  }\n\n  setScheme(scheme: AppearanceSchemeType): void {\n    document.body.setAttribute('scheme', scheme);\n  }\n\n  componentDidUpdate(prevProps: ConfigProviderProps) {\n    if (prevProps.scheme !== this.props.scheme) {\n      this.setScheme(this.mapOldScheme(this.props.scheme));\n    }\n  }\n\n  getChildContext(): ConfigProviderProps {\n    return {\n      isWebView: this.props.isWebView,\n      webviewType: this.props.webviewType,\n      scheme: this.mapOldScheme(this.props.scheme),\n      appearance: this.props.appearance,\n      app: this.props.app,\n    };\n  }\n\n  render() {\n    return (\n      <ConfigProviderContext.Provider value={this.getChildContext()}>\n        {this.props.children}\n      </ConfigProviderContext.Provider>\n    );\n  }\n}\n"],"file":"ConfigProvider.js"}