{"version":3,"sources":["../../../src/components/PanelHeaderSimple/PanelHeaderSimple.tsx"],"names":["PanelHeaderSimple","className","left","addon","children","right","separator","visor","transparent","getRef","getRootRef","restProps","platform","ConfigProviderContext","webviewType","WebviewType","VKAPPS","ANDROID","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAcA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,OAYI;AAAA,MAX5BC,SAW4B,QAX5BA,SAW4B;AAAA,MAV5BC,IAU4B,QAV5BA,IAU4B;AAAA,MAT5BC,KAS4B,QAT5BA,KAS4B;AAAA,MAR5BC,QAQ4B,QAR5BA,QAQ4B;AAAA,MAP5BC,KAO4B,QAP5BA,KAO4B;AAAA,MAN5BC,SAM4B,QAN5BA,SAM4B;AAAA,MAL5BC,KAK4B,QAL5BA,KAK4B;AAAA,MAJ5BC,WAI4B,QAJ5BA,WAI4B;AAAA,MAH5BC,MAG4B,QAH5BA,MAG4B;AAAA,MAF5BC,UAE4B,QAF5BA,UAE4B;AAAA,MADzBC,SACyB;AAC5B,MAAMC,QAAQ,GAAG,2BAAjB;;AAD4B,oBAEJ,uBAAWC,4CAAX,CAFI;AAAA,MAEpBC,WAFoB,eAEpBA,WAFoB;;AAI5B,sBACE,+DACMH,SADN;AAEE,IAAA,SAAS,EACP,yBACE,2BAAa,mBAAb,EAAkCC,QAAlC,CADF,EAEE;AACE,kCAA4BJ,WAD9B;AAEE,gCAA0BD,KAF5B;AAGE,gCAA0BD,SAAS,IAAIC,KAHzC;AAIE,mCAA6BO,WAAW,KAAKC,mCAAYC;AAJ3D,KAFF,EAQEf,SARF,CAHJ;AAcE,IAAA,GAAG,EAAES;AAdP,mBAgBE,6BAAC,oBAAD;AAAa,IAAA,QAAQ,EAAC,KAAtB;AAA4B,IAAA,SAAS,EAAC,0BAAtC;AAAiE,IAAA,UAAU,EAAED;AAA7E,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGP,IADH,CADF,EAIGU,QAAQ,KAAKK,iBAAb,IAAwB,CAAC,CAACd,KAA1B,iBACD;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,KADH,CALF,CADF,eAWE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGC,QADH,CAXF,eAcE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGU,WAAW,KAAKC,mCAAYC,MAA5B,IAAsCX,KADzC,CAdF,CADF,CAhBF,EAoCGC,SAAS,IAAIC,KAAb,iBAAsB,6BAAC,kBAAD;AAAW,IAAA,SAAS,EAAC;AAArB,IApCzB,CADF;AAwCD,CAxDD;;AA0DAP,iBAAiB,CAACkB,YAAlB,GAAiC;AAC/BZ,EAAAA,SAAS,EAAE,IADoB;AAE/BE,EAAAA,WAAW,EAAE,KAFkB;AAG/BD,EAAAA,KAAK,EAAE;AAHwB,CAAjC;eAMeP,iB","sourcesContent":["import React, { HTMLAttributes, ReactNode, useContext } from 'react';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassname from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Separator from '../Separator/Separator';\nimport { ANDROID } from '../../lib/platform';\nimport { HasRef, HasRootRef } from '../../types';\nimport { ConfigProviderContext, WebviewType } from '../ConfigProvider/ConfigProviderContext';\n\nexport interface PanelHeaderSimpleProps extends HTMLAttributes<HTMLDivElement>, HasRef<HTMLDivElement>, HasRootRef<HTMLDivElement> {\n  left?: ReactNode;\n  addon?: ReactNode;\n  right?: ReactNode;\n  separator?: boolean;\n  transparent?: boolean;\n  /**\n   * Если `false`, то шапка будет нулевой высоты и контент панели \"залезет\" под неё\n   */\n  visor?: boolean;\n}\n\nconst PanelHeaderSimple = ({\n  className,\n  left,\n  addon,\n  children,\n  right,\n  separator,\n  visor,\n  transparent,\n  getRef,\n  getRootRef,\n  ...restProps\n}: PanelHeaderSimpleProps) => {\n  const platform = usePlatform();\n  const { webviewType } = useContext(ConfigProviderContext);\n\n  return (\n    <div\n      {...restProps}\n      className={\n        classNames(\n          getClassname('PanelHeaderSimple', platform),\n          {\n            'PanelHeaderSimple--trnsp': transparent,\n            'PanelHeaderSimple--vis': visor,\n            'PanelHeaderSimple--sep': separator && visor,\n            'PanelHeaderSimple--vkapps': webviewType === WebviewType.VKAPPS,\n          },\n          className,\n        )\n      }\n      ref={getRootRef}\n    >\n      <FixedLayout vertical=\"top\" className=\"PanelHeaderSimple__fixed\" getRootRef={getRef}>\n        <div className=\"PanelHeaderSimple__in\">\n          <div className=\"PanelHeaderSimple__left\">\n            <div className=\"PanelHeaderSimple__left-in\">\n              {left}\n            </div>\n            {platform !== ANDROID && !!addon &&\n            <div className=\"PanelHeaderSimple__addon\">\n              {addon}\n            </div>\n            }\n          </div>\n          <div className=\"PanelHeaderSimple__content\">\n            {children}\n          </div>\n          <div className=\"PanelHeaderSimple__right\">\n            {webviewType !== WebviewType.VKAPPS && right}\n          </div>\n        </div>\n      </FixedLayout>\n      {separator && visor && <Separator className=\"PanelHeaderSimple__separator\" />}\n    </div>\n  );\n};\n\nPanelHeaderSimple.defaultProps = {\n  separator: true,\n  transparent: false,\n  visor: true,\n};\n\nexport default PanelHeaderSimple;\n"],"file":"PanelHeaderSimple.js"}