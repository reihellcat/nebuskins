{"version":3,"sources":["../../../src/components/PanelHeader/PanelHeader.tsx"],"names":["PanelHeader","ready","panelId","context","panel","leftNode","document","getElementById","addonNode","titleNode","rightNode","getRef","props","element","current","setState","left","addon","children","right","transparent","platform","isPrimitive","state","ReactDOM","createPortal","IOS","webviewType","WebviewType","VKAPPS","Component","PropTypes","string","any","scheme","oneOf","INTERNAL"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes, { Requireable } from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasPlatform, HasRef } from '../../types';\nimport { IOS } from '../../lib/platform';\nimport { WebviewType } from '../ConfigProvider/ConfigProviderContext';\n\nexport interface PanelHeaderProps extends HTMLAttributes<HTMLElement>, HasRef<HTMLElement>, HasPlatform {\n  left?: ReactNode;\n  addon?: ReactNode;\n  right?: ReactNode;\n  transparent?: boolean;\n}\n\nexport interface PanelHeaderState {\n  ready: boolean;\n}\n\nexport interface PanelHeaderContext {\n  panel: Requireable<string>;\n  document: Requireable<{}>;\n  scheme: Requireable<string>;\n  webviewType: Requireable<WebviewType>;\n}\n\n/**\n * @deprecated используйте PanelHeaderSimple\n */\nclass PanelHeader extends Component<PanelHeaderProps, PanelHeaderState> {\n  static defaultProps: PanelHeaderProps = {\n    transparent: false,\n  };\n\n  static contextTypes: PanelHeaderContext = {\n    panel: PropTypes.string,\n    document: PropTypes.any,\n    scheme: PropTypes.string,\n    webviewType: PropTypes.oneOf([WebviewType.INTERNAL, WebviewType.VKAPPS]),\n  };\n\n  state: PanelHeaderState = {\n    ready: false,\n  };\n\n  leftNode: HTMLElement;\n  addonNode: HTMLElement;\n  titleNode: HTMLElement;\n  rightNode: HTMLElement;\n\n  get document(): Document {\n    return this.context.document || document;\n  }\n\n  get webviewType(): WebviewType {\n    return this.context.webviewType || WebviewType.VKAPPS;\n  }\n\n  componentDidMount() {\n    const panelId = this.context.panel;\n\n    this.leftNode = this.document.getElementById(`header-left-${panelId}`);\n    this.addonNode = this.document.getElementById(`header-addon-${panelId}`);\n    this.titleNode = this.document.getElementById(`header-title-${panelId}`);\n    this.rightNode = this.document.getElementById(`header-right-${panelId}`);\n\n    const getRef = this.props.getRef;\n    if (getRef) {\n      const element = this.document.getElementById(`panel-header-${panelId}`);\n      if (typeof getRef === 'function') {\n        getRef(element);\n      } else {\n        getRef.current = element;\n      }\n    }\n\n    this.setState({ ready: true });\n  }\n\n  render() {\n    let { left, addon, children, right, transparent, platform } = this.props;\n    const isPrimitive = typeof children === 'string' || typeof children === 'number';\n\n    return this.state.ready ? [\n      ReactDOM.createPortal(<div className={classNames('PanelHeader-left-in', {\n        'PanelHeader-left-in--tp': transparent,\n      })}>{left}</div>, this.leftNode),\n      platform === IOS && ReactDOM.createPortal(<div className={classNames('PanelHeader-addon', {\n        'PanelHeader-addon--tp': transparent,\n      })}>{addon}</div>, this.addonNode),\n      ReactDOM.createPortal(<div className={classNames('PanelHeader-content', {\n        'PanelHeader-content--tp': transparent,\n      })}>\n        {isPrimitive ? <span>{children}</span> : children}\n      </div>, this.titleNode),\n      ReactDOM.createPortal(<div className={classNames('PanelHeader-right', {\n        'PanelHeader-right--tp': transparent,\n        'PanelHeader-right--vkapps': this.webviewType === WebviewType.VKAPPS,\n      })}>{this.webviewType === 'internal' ? right : null}</div>, this.rightNode),\n    ] : null;\n  }\n}\n\nexport default withPlatform(PanelHeader);\n"],"file":"PanelHeader.js"}