{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\nimport '@vkontakte/vkui/dist/vkui.css';\nexport default theme;\n\nvar theme = function theme() {\n  var _useState = useState(\"bright_light\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      scheme = _useState2[0],\n      SetScheme = _useState2[1];\n\n  function UpdateTheme() {\n    if (scheme === \"bright_light\" || scheme === \"client_light\") {\n      SetScheme('space_gray');\n      connect.send(\"VKWebAppSetViewSettings\", {\n        \"status_bar_style\": \"light\",\n        \"action_bar_color\": \"#000\"\n      });\n    } else if (scheme === \"space_gray\" || scheme === \"client_dark\") {\n      SetScheme('bright_light');\n      connect.send(\"VKWebAppSetViewSettings\", {\n        \"status_bar_style\": \"dark\",\n        \"action_bar_color\": \"#fff\"\n      });\n    }\n  }\n\n  useEffect(function () {\n    window.addEventListener('popstate', function () {\n      return goBack();\n    }); //  Добавляем обработчик события изменения истории для работы аппаратных кнопок.\n\n    connect.subscribe(function (_ref) {\n      var _ref$detail = _ref.detail,\n          type = _ref$detail.type,\n          data = _ref$detail.data;\n\n      if (type === 'VKWebAppUpdateConfig') {\n        SetScheme(data.scheme);\n      }\n    });\n  }, []);\n};","map":{"version":3,"sources":["C:/Users/Павел/Desktop/vkapp/nebuskins/src/theme.js"],"names":["React","useState","useEffect","connect","View","ConfigProvider","theme","scheme","SetScheme","UpdateTheme","send","window","addEventListener","goBack","subscribe","detail","type","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,2CAAjB;AACA,OAAOC,cAAP,MAA2B,+DAA3B;AACA,OAAO,+BAAP;AAEA,eAAeC,KAAf;;AACA,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACSL,QAAQ,CAAC,cAAD,CADjB;AAAA;AAAA,MACZM,MADY;AAAA,MACJC,SADI;;AAGnB,WAASC,WAAT,GAAuB;AACrB,QAAGF,MAAM,KAAK,cAAX,IAA6BA,MAAM,KAAK,cAA3C,EAA2D;AAC1DC,MAAAA,SAAS,CAAC,YAAD,CAAT;AACAL,MAAAA,OAAO,CAACO,IAAR,CAAa,yBAAb,EAAwC;AAAC,4BAAoB,OAArB;AAA8B,4BAAoB;AAAlD,OAAxC;AACA,KAHD,MAIK,IAAGH,MAAM,KAAK,YAAX,IAA2BA,MAAM,KAAK,aAAzC,EAAuD;AAC3DC,MAAAA,SAAS,CAAC,cAAD,CAAT;AACAL,MAAAA,OAAO,CAACO,IAAR,CAAa,yBAAb,EAAwC;AAAC,4BAAoB,MAArB;AAA6B,4BAAoB;AAAjD,OAAxC;AACA;AACF;;AAEDR,EAAAA,SAAS,CAAC,YAAM;AACTS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,UAAxB,EAAoC;AAAA,aAAMC,MAAM,EAAZ;AAAA,KAApC,EADS,CAC4C;;AAC3DV,IAAAA,OAAO,CAACW,SAAR,CAAkB,gBAA+B;AAAA,6BAA5BC,MAA4B;AAAA,UAAlBC,IAAkB,eAAlBA,IAAkB;AAAA,UAAZC,IAAY,eAAZA,IAAY;;AAChD,UAAID,IAAI,KAAK,sBAAb,EAAqC;AACpCR,QAAAA,SAAS,CAACS,IAAI,CAACV,MAAN,CAAT;AACA;AACD,KAJD;AAKG,GAPK,EAOH,EAPG,CAAT;AAQA,CAtBD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nexport default theme;\r\nconst theme = () => {\r\n\tconst [scheme, SetScheme] = useState(\"bright_light\")\r\n\t\r\n\tfunction UpdateTheme() {\r\n\t\t\tif(scheme === \"bright_light\" || scheme === \"client_light\") {\r\n\t\t\t\tSetScheme('space_gray');\r\n\t\t\t\tconnect.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#000\"});\r\n\t\t\t}\r\n\t\t\telse if(scheme === \"space_gray\" || scheme === \"client_dark\"){\r\n\t\t\t\tSetScheme('bright_light');\r\n\t\t\t\tconnect.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"dark\", \"action_bar_color\": \"#fff\"});\r\n\t\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n        window.addEventListener('popstate', () => goBack()); //  Добавляем обработчик события изменения истории для работы аппаратных кнопок.\r\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tSetScheme(data.scheme)\r\n\t\t\t}\r\n\t\t});\r\n    }, []);\r\n}"]},"metadata":{},"sourceType":"module"}