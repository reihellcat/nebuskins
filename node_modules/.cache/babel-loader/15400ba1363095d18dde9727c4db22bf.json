{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\src\\\\panels\\\\Feed.js\";\nimport React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport connect from '@vkontakte/vk-connect';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Panel, PanelHeader, Button, Cell, Avatar, Div, Placeholder, Text, ConfigProvider } from '@vkontakte/vkui';\nimport Icon16Add from '@vkontakte/icons/dist/16/add';\nimport Icon24Smile from '@vkontakte/icons/dist/24/smile';\nimport MainFeed from './MainFeed';\nimport DefaultSkins from './DefaultSkins';\n\nvar Feed = /*#__PURE__*/function (_React$Component) {\n  _inherits(Feed, _React$Component);\n\n  function Feed(props) {\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Feed).call(this, props));\n\n    _this.goBack = function () {\n      // Функция, которая переносит нас на панель назад.\n      var history = _this.state.history;\n\n      if (history.length === 1) {\n        // Если в массиве одно значение:\n        connect.send(\"VKWebAppClose\"); // отправляем connect на закрытие сервиса.\n      } else if (history.length > 1) {\n        // Если в массиве больше одного значения:\n        history.pop(); // удаляем последний элемент в массиве.\n\n        _this.setState({\n          history: history,\n          activePanel: history[history.length - 1]\n        }); // Изменяем массив с иторией и меняем активную панель.\n\n      }\n    };\n\n    _this.state = {\n      activePanel: 'feed',\n      history: ['feed']\n    };\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"goToPage\",\n    value: function goToPage(name) {\n      // Функция, которая переносит нас на следущую панель \n      window.history.pushState({\n        panel: name\n      }, name); //  Создаём новую запись в истории браузера\n\n      this.setState({\n        activePanel: name,\n        // Меняем активную панель на second\n        history: [].concat(_toConsumableArray(this.state.history), [name]) // Добавляем панель в историю\n\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.addEventListener('popstate', function () {\n        return _this2.goBack();\n      }); //  Добавляем обработчик события изменения истории для работы аппаратных кнопок.\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ConfigProvider, {\n        isWebView: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        activePanel: this.state.activePanel // Какая панель будет активирована.\n        ,\n        history: this.state.history // Массив с историей.\n        ,\n        onSwipeBack: this.goBack // При свайпе выполнять функцию goBack.\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MainFeed, {\n        id: \"feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 2\n        }\n      }), /*#__PURE__*/React.createElement(DefaultSkins, {\n        id: \"default_skins\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 2\n        }\n      })));\n    }\n  }]);\n\n  return Feed;\n}(React.Component);\n\nexport default Feed;","map":{"version":3,"sources":["C:/Users/Павел/Desktop/vkapp/nebuskins/src/panels/Feed.js"],"names":["React","bridge","connect","View","Panel","PanelHeader","Button","Cell","Avatar","Div","Placeholder","Text","ConfigProvider","Icon16Add","Icon24Smile","MainFeed","DefaultSkins","Feed","props","goBack","history","state","length","send","pop","setState","activePanel","name","window","pushState","panel","addEventListener","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAO,+BAAP;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,WAAtB,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,MAAjD,EAAyDC,GAAzD,EAA8DC,WAA9D,EAA2EC,IAA3E,EAAiFC,cAAjF,QAAuG,iBAAvG;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;IAGMC,I;;;AACF,gBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAEhB,8EAAMA,KAAN;;AAFgB,UAexBC,MAfwB,GAef,YAAM;AAAE;AACf,UAAMC,OAAO,GAAG,MAAKC,KAAL,CAAWD,OAA3B;;AACA,UAAGA,OAAO,CAACE,MAAR,KAAmB,CAAtB,EAAyB;AAAE;AACvBpB,QAAAA,OAAO,CAACqB,IAAR,CAAa,eAAb,EADqB,CACU;AAClC,OAFD,MAEO,IAAIH,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB;AAAE;AAC7BF,QAAAA,OAAO,CAACI,GAAR,GAD2B,CACb;;AACd,cAAKC,QAAL,CAAc;AAACL,UAAAA,OAAO,EAAEA,OAAV;AAAmBM,UAAAA,WAAW,EAAEN,OAAO,CAACA,OAAO,CAACE,MAAR,GAAiB,CAAlB;AAAvC,SAAd,EAF2B,CAEiD;;AAC/E;AACF,KAvBuB;;AAGhB,UAAKD,KAAL,GAAa;AACXK,MAAAA,WAAW,EAAE,MADF;AAEXN,MAAAA,OAAO,EAAE,CAAC,MAAD;AAFE,KAAb;AAHgB;AAOrB;;;;6BACQO,I,EAAM;AAAE;AACfC,MAAAA,MAAM,CAACR,OAAP,CAAeS,SAAf,CAAyB;AAACC,QAAAA,KAAK,EAAEH;AAAR,OAAzB,EAAwCA,IAAxC,EADa,CACkC;;AAC/C,WAAKF,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAEC,IADH;AACU;AACpBP,QAAAA,OAAO,+BAAM,KAAKC,KAAL,CAAWD,OAAjB,IAA0BO,IAA1B,EAFG,CAE6B;;AAF7B,OAAd;AAIH;;;wCAUmB;AAAA;;AAElBC,MAAAA,MAAM,CAACG,gBAAP,CAAwB,UAAxB,EAAoC;AAAA,eAAM,MAAI,CAACZ,MAAL,EAAN;AAAA,OAApC,EAFkB,CAEwC;AAC3D;;;6BACQ;AAEL,0BACJ,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACY,oBAAC,IAAD;AACI,QAAA,WAAW,EAAE,KAAKE,KAAL,CAAWK,WAD5B,CACyC;AADzC;AAEI,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWD,OAFxB,CAEiC;AAFjC;AAGI,QAAA,WAAW,EAAE,KAAKD,MAHtB,CAG8B;AAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKX,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALW,eAMX,oBAAC,YAAD;AAAc,QAAA,EAAE,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANW,CADZ,CADI;AAYH;;;;EA3CkBnB,KAAK,CAACgC,S;;AA6CzB,eAAef,IAAf","sourcesContent":["import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport { View, Panel, PanelHeader, Button, Cell, Avatar, Div, Placeholder, Text, ConfigProvider } from '@vkontakte/vkui';\r\nimport Icon16Add from '@vkontakte/icons/dist/16/add';\r\nimport Icon24Smile from '@vkontakte/icons/dist/24/smile';\r\nimport MainFeed from './MainFeed';\r\nimport DefaultSkins from './DefaultSkins';\r\n\r\n\r\nclass Feed extends React.Component {\r\n    constructor (props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n          activePanel: 'feed', \r\n          history: ['feed'], \r\n      };\r\n  }\r\n  goToPage(name) { // Функция, которая переносит нас на следущую панель \r\n    window.history.pushState({panel: name}, name); //  Создаём новую запись в истории браузера\r\n    this.setState({\r\n        activePanel: name,  // Меняем активную панель на second\r\n        history: [...this.state.history, name] // Добавляем панель в историю\r\n    })\r\n}\r\ngoBack = () => { // Функция, которая переносит нас на панель назад.\r\n  const history = this.state.history;\r\n  if(history.length === 1) { // Если в массиве одно значение:\r\n      connect.send(\"VKWebAppClose\"); // отправляем connect на закрытие сервиса.\r\n  } else if (history.length > 1) { // Если в массиве больше одного значения:\r\n      history.pop() // удаляем последний элемент в массиве.\r\n      this.setState({history: history, activePanel: history[history.length - 1]}) // Изменяем массив с иторией и меняем активную панель.\r\n  }\r\n}\r\ncomponentDidMount() {\r\n  \r\n  window.addEventListener('popstate', () => this.goBack()); //  Добавляем обработчик события изменения истории для работы аппаратных кнопок.\r\n}\r\nrender() { \r\n\r\n    return (\r\n<ConfigProvider isWebView={true}> \r\n            <View \r\n                activePanel={this.state.activePanel} // Какая панель будет активирована.\r\n                history={this.state.history} // Массив с историей.\r\n                onSwipeBack={this.goBack} // При свайпе выполнять функцию goBack.\r\n            >\r\n <MainFeed id=\"feed\"/>\r\n <DefaultSkins id=\"default_skins\"/>\r\n            </View>\r\n            </ConfigProvider>\r\n    )\r\n}\r\n}\r\nexport default Feed;"]},"metadata":{},"sourceType":"module"}