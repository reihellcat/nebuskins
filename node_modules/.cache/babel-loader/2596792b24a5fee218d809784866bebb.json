{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport withPlatform from '../../hoc/withPlatform';\nimport { IOS } from '../../lib/platform';\nimport { WebviewType } from '../ConfigProvider/ConfigProviderContext';\n/**\n * @deprecated используйте PanelHeaderSimple\n */\n\nvar PanelHeader = /*#__PURE__*/function (_Component) {\n  _inherits(PanelHeader, _Component);\n\n  var _super = _createSuper(PanelHeader);\n\n  function PanelHeader() {\n    var _this;\n\n    _classCallCheck(this, PanelHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      ready: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"leftNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"addonNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"titleNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rightNode\", void 0);\n\n    return _this;\n  }\n\n  _createClass(PanelHeader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var panelId = this.context.panel;\n      this.leftNode = this.document.getElementById(\"header-left-\".concat(panelId));\n      this.addonNode = this.document.getElementById(\"header-addon-\".concat(panelId));\n      this.titleNode = this.document.getElementById(\"header-title-\".concat(panelId));\n      this.rightNode = this.document.getElementById(\"header-right-\".concat(panelId));\n      var getRef = this.props.getRef;\n\n      if (getRef) {\n        var element = this.document.getElementById(\"panel-header-\".concat(panelId));\n\n        if (typeof getRef === 'function') {\n          getRef(element);\n        } else {\n          getRef.current = element;\n        }\n      }\n\n      this.setState({\n        ready: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          left = _this$props.left,\n          addon = _this$props.addon,\n          children = _this$props.children,\n          right = _this$props.right,\n          transparent = _this$props.transparent,\n          platform = _this$props.platform;\n      var isPrimitive = typeof children === 'string' || typeof children === 'number';\n      return this.state.ready ? [ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('PanelHeader-left-in', {\n          'PanelHeader-left-in--tp': transparent\n        })\n      }, left), this.leftNode), platform === IOS && ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('PanelHeader-addon', {\n          'PanelHeader-addon--tp': transparent\n        })\n      }, addon), this.addonNode), ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('PanelHeader-content', {\n          'PanelHeader-content--tp': transparent\n        })\n      }, isPrimitive ? /*#__PURE__*/React.createElement(\"span\", null, children) : children), this.titleNode), ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('PanelHeader-right', {\n          'PanelHeader-right--tp': transparent,\n          'PanelHeader-right--vkapps': this.webviewType === WebviewType.VKAPPS\n        })\n      }, this.webviewType === 'internal' ? right : null), this.rightNode)] : null;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.context.document || document;\n    }\n  }, {\n    key: \"webviewType\",\n    get: function get() {\n      return this.context.webviewType || WebviewType.VKAPPS;\n    }\n  }]);\n\n  return PanelHeader;\n}(Component);\n\n_defineProperty(PanelHeader, \"defaultProps\", {\n  transparent: false\n});\n\n_defineProperty(PanelHeader, \"contextTypes\", {\n  panel: PropTypes.string,\n  document: PropTypes.any,\n  scheme: PropTypes.string,\n  webviewType: PropTypes.oneOf([WebviewType.INTERNAL, WebviewType.VKAPPS])\n});\n\nexport default withPlatform(PanelHeader);","map":null,"metadata":{},"sourceType":"module"}