{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\src\\\\panels\\\\AddImage.js\";\nimport React, { useState } from \"react\";\nimport { Button, Div } from '@vkontakte/vkui';\n/**\r\n *\r\n * @param {*} param0\r\n */\n\nfunction AddImage(_ref) {\n  var imageChanged = _ref.imageChanged,\n      uploadImage = _ref.uploadImage;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageThumb = _useState2[0],\n      setImageThumb = _useState2[1];\n  /**\r\n   * using Native Plugin\r\n   */\n\n\n  var takePicture = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var imageInfo, imagaData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Camera.getPhoto({\n                quality: 90,\n                allowEditing: false,\n                resultType: CameraResultType.DataUrl,\n                source: CameraSource.Prompt\n              });\n\n            case 3:\n              imageInfo = _context.sent;\n              // image.base64_data will contain the base64 encoded result as a JPEG,\n              // with the data-uri prefix added\n              imagaData = {\n                dataUrl: imageInfo.dataUrl,\n                format: imageInfo.format,\n                fileName: imageInfo.webPath || Date.now() + \".jpeg\"\n              };\n              imageChanged(imagaData);\n              setImageThumb(imagaData.dataUrl);\n              _context.next = 15;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"error\", _context.t0);\n              setImageThumb(\"\");\n              imageChanged(null);\n              alert(\"Sorry, Camera API not supported\");\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function takePicture() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\r\n   * clear local value tracking the selected image and emit\r\n   * and event to the parent to indicate a change\r\n   */\n\n\n  var clearImage = function clearImage() {\n    setImageThumb(\"\");\n    imageChanged({});\n  };\n\n  return /*#__PURE__*/React.createElement(Div, {\n    className: \"btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: uploadImage,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \" \\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"));\n}\n\nexport default AddImage;","map":{"version":3,"sources":["C:/Users/Павел/Desktop/vkapp/nebuskins/src/panels/AddImage.js"],"names":["React","useState","Button","Div","AddImage","imageChanged","uploadImage","imageThumb","setImageThumb","takePicture","Camera","getPhoto","quality","allowEditing","resultType","CameraResultType","DataUrl","source","CameraSource","Prompt","imageInfo","imagaData","dataUrl","format","fileName","webPath","Date","now","console","log","alert","clearImage"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AAEA;;;;;AAIA,SAASC,QAAT,OAAiD;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAAA,kBACXL,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,MACxCM,UADwC;AAAA,MAC5BC,aAD4B;AAG/C;;;;;AAGA,MAAIC,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGUC,MAAM,CAACC,QAAP,CAAgB;AACtCC,gBAAAA,OAAO,EAAE,EAD6B;AAEtCC,gBAAAA,YAAY,EAAE,KAFwB;AAGtCC,gBAAAA,UAAU,EAAEC,gBAAgB,CAACC,OAHS;AAItCC,gBAAAA,MAAM,EAAEC,YAAY,CAACC;AAJiB,eAAhB,CAHV;;AAAA;AAGRC,cAAAA,SAHQ;AASd;AACA;AACIC,cAAAA,SAXU,GAWE;AACdC,gBAAAA,OAAO,EAAEF,SAAS,CAACE,OADL;AAEdC,gBAAAA,MAAM,EAAEH,SAAS,CAACG,MAFJ;AAGdC,gBAAAA,QAAQ,EAAEJ,SAAS,CAACK,OAAV,IAAqBC,IAAI,CAACC,GAAL,KAAa;AAH9B,eAXF;AAgBdtB,cAAAA,YAAY,CAACgB,SAAD,CAAZ;AACAb,cAAAA,aAAa,CAACa,SAAS,CAACC,OAAX,CAAb;AAjBc;AAAA;;AAAA;AAAA;AAAA;AAmBdM,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACArB,cAAAA,aAAa,CAAC,EAAD,CAAb;AACAH,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACAyB,cAAAA,KAAK,CAAC,iCAAD,CAAL;;AAtBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXrB,WAAW;AAAA;AAAA;AAAA,KAAf;AA2BA;;;;;;AAIA,MAAIsB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBvB,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAH,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GAHD;;AAMA,sBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAA8B,IAAA,KAAK,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADF,CADJ;AAMD;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Div } from '@vkontakte/vkui';\r\n\r\n/**\r\n *\r\n * @param {*} param0\r\n */\r\nfunction AddImage({ imageChanged, uploadImage }) {\r\n  const [imageThumb, setImageThumb] = useState(\"\");\r\n\r\n  /**\r\n   * using Native Plugin\r\n   */\r\n  let takePicture = async () => {\r\n    // Otherwise, make the call:\r\n    try {\r\n      const imageInfo = await Camera.getPhoto({\r\n        quality: 90,\r\n        allowEditing: false,\r\n        resultType: CameraResultType.DataUrl,\r\n        source: CameraSource.Prompt\r\n      });\r\n      // image.base64_data will contain the base64 encoded result as a JPEG,\r\n      // with the data-uri prefix added\r\n      let imagaData = {\r\n        dataUrl: imageInfo.dataUrl,\r\n        format: imageInfo.format,\r\n        fileName: imageInfo.webPath || Date.now() + \".jpeg\"\r\n      };\r\n      imageChanged(imagaData);\r\n      setImageThumb(imagaData.dataUrl);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n      setImageThumb(\"\");\r\n      imageChanged(null);\r\n      alert(\"Sorry, Camera API not supported\");\r\n    }\r\n  };\r\n\r\n\r\n  /**\r\n   * clear local value tracking the selected image and emit\r\n   * and event to the parent to indicate a change\r\n   */\r\n  let clearImage = () => {\r\n    setImageThumb(\"\");\r\n    imageChanged({});\r\n  };\r\n \r\n\r\n  return (\r\n      <Div className=\"btn-wrapper\">\r\n        <Button onClick={uploadImage} color=\"secondary\"> Загрузить\r\n        </Button>\r\n      </Div>\r\n  );\r\n}\r\n\r\nexport default AddImage;"]},"metadata":{},"sourceType":"module"}