{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\src\\\\App.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ConfigProvider } from '@vkontakte/vkui';\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport connect from '@vkontakte/vk-connect';\nimport firebase from './firebase';\nimport Home from './panels/NewApp/Home';\nimport TestFeed from './panels/NewApp/TestFeed';\nimport Settings from './panels/NewApp/Settings';\nimport AddSkin from './panels/NewApp/AddSkin';\nimport AddSkinForm from './panels/NewApp/AddSkinForm';\nimport Pets from './panels/NewApp/Pets';\nimport BackTheme from './panels/NewApp/BackTheme';\n\nvar App = function App() {\n  var _useState = useState('home'),\n      _useState2 = _slicedToArray(_useState, 2),\n      activePanel = _useState2[0],\n      setActivePanel = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fetchedUser = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(\"space_gray\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scheme = _useState6[0],\n      SetScheme = _useState6[1];\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      main_skin = _React$useState2[0],\n      setSkins = _React$useState2[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      counter = _useState8[0],\n      setCounter = _useState8[1];\n\n  useEffect(function () {\n    // bridge.subscribe(({ detail: { type, data }}) => {\n    // \tif (type === 'VKWebAppUpdateConfig') {\n    // \t\tconst schemeAttribute = document.createAttribute('scheme');\n    // \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n    // \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n    // \t}\n    // });\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return bridge.send('VKWebAppGetUserInfo');\n\n              case 2:\n                user = _context.sent;\n                setUser(user);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    bridge.subscribe(function (_ref) {\n      var _ref$detail = _ref.detail,\n          type = _ref$detail.type,\n          data = _ref$detail.data;\n\n      if (type === 'VKWebAppUpdateConfig') {\n        SetScheme(data.scheme);\n      }\n    });\n  }, []);\n\n  function UpdateTheme() {\n    if (scheme === \"bright_light\" || scheme === \"client_light\") {\n      SetScheme('space_gray');\n      connect.send(\"VKWebAppSetViewSettings\", {\n        \"status_bar_style\": \"light\",\n        \"action_bar_color\": \"#000\"\n      });\n    } else if (scheme === \"space_gray\" || scheme === \"client_dark\") {\n      SetScheme('bright_light');\n      connect.send(\"VKWebAppSetViewSettings\", {\n        \"status_bar_style\": \"dark\",\n        \"action_bar_color\": \"#fff\"\n      });\n    }\n  }\n\n  React.useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var db, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                db = firebase.firestore();\n                _context2.next = 3;\n                return db.collection(\"skins\").get();\n\n              case 3:\n                data = _context2.sent;\n                setSkins(data.docs.map(function (doc) {\n                  return doc.data();\n                }));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    if (counter === 10) {\n      setCounter(counter === 0);\n      console.log('Ура, получилось.....');\n    }\n  }, [counter]);\n\n  var go = function go(e) {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  var onAdmin = function onAdmin(e) {\n    setCounter(function (counter) {\n      return counter + 1;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    scheme: scheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    activePanel: activePanel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    id: \"home\",\n    onAdmin: onAdmin,\n    go: go,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(TestFeed, {\n    id: \"def_skins\",\n    main_skin: main_skin,\n    go: go,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Settings, {\n    id: \"settings\",\n    UpdateTheme: UpdateTheme,\n    fetchedUser: fetchedUser,\n    go: go,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddSkin, {\n    id: \"add_skin\",\n    go: go,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddSkinForm, {\n    id: \"add_skin_form\",\n    fetchedUser: fetchedUser,\n    go: go,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pets, {\n    id: \"pets\",\n    go: go,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BackTheme, {\n    id: \"back_theme\",\n    go: go,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Павел/Desktop/vkapp/nebuskins/src/App.js"],"names":["React","useState","useEffect","bridge","View","ConfigProvider","connect","firebase","Home","TestFeed","Settings","AddSkin","AddSkinForm","Pets","BackTheme","App","activePanel","setActivePanel","fetchedUser","setUser","scheme","SetScheme","main_skin","setSkins","counter","setCounter","fetchData","send","user","subscribe","detail","type","data","UpdateTheme","db","firestore","collection","get","docs","map","doc","console","log","go","e","currentTarget","dataset","to","onAdmin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {View, ConfigProvider} from '@vkontakte/vkui';\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nimport firebase from './firebase';\r\n\r\nimport Home from './panels/NewApp/Home';\r\nimport TestFeed from './panels/NewApp/TestFeed';\r\nimport Settings from './panels/NewApp/Settings';\r\nimport AddSkin from './panels/NewApp/AddSkin';\r\nimport AddSkinForm from './panels/NewApp/AddSkinForm';\r\nimport Pets from './panels/NewApp/Pets';\r\nimport BackTheme from './panels/NewApp/BackTheme';\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n  const [fetchedUser, setUser] = useState(null);\r\n  const [scheme, SetScheme] = useState(\"space_gray\");\r\n  const [main_skin, setSkins] = React.useState([])\r\n  const [counter, setCounter] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\t// bridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n      const user = await bridge.send('VKWebAppGetUserInfo');\r\n      setUser(user);\r\n\t\t}\r\n\t\tfetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    bridge.subscribe(({ detail: { type, data }}) => {\r\n    if (type === 'VKWebAppUpdateConfig') {\r\n      SetScheme(data.scheme)\r\n    }\r\n  });\r\n  }, []);\r\n\r\n\r\n  function UpdateTheme() {\r\n    if(scheme === \"bright_light\" || scheme === \"client_light\") {\r\n      SetScheme('space_gray');\r\n      connect.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#000\"});\r\n    }\r\n    else if(scheme === \"space_gray\" || scheme === \"client_dark\"){\r\n      SetScheme('bright_light');\r\n      connect.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"dark\", \"action_bar_color\": \"#fff\"});\r\n    }\r\n}\r\n\r\n\r\n    React.useEffect(() => {\r\n        const fetchData = async () => {\r\n            const db = firebase.firestore()\r\n            const data = await db.collection(\"skins\").get()\r\n            setSkins(data.docs.map(doc => doc.data()))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n  \r\n    useEffect(() => {\r\n      if(counter === 10) {\r\n          setCounter(counter === 0)\r\n          console.log('Ура, получилось.....')\r\n      }\r\n    }, [counter])\r\n\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n  };\r\n  \r\n  const onAdmin = e => {\r\n    setCounter(counter => counter + 1)\r\n  }\r\n\r\n\treturn (\r\n    <ConfigProvider scheme={scheme} >\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<Home id='home' onAdmin={onAdmin} go={go} />\r\n\t\t\t<TestFeed id='def_skins' main_skin={main_skin} go={go} />\r\n      <Settings id=\"settings\" UpdateTheme={UpdateTheme} fetchedUser={fetchedUser} go={go} />\r\n      <AddSkin id=\"add_skin\" go={go}/>\r\n      <AddSkinForm id=\"add_skin_form\" fetchedUser={fetchedUser}  go={go} />\r\n      <Pets id=\"pets\" go={go} />\r\n      <BackTheme id=\"back_theme\" go={go} />\r\n\t\t</View>\r\n    </ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}