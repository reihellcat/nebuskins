{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\src\\\\panels\\\\changetheme.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nvar changetheme = function changetheme() {\n  var _useState = useState(\"bright_light\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      scheme = _useState2[0],\n      SetScheme = _useState2[1];\n\n  function UpdateTheme() {\n    if (scheme === \"bright_light\" || scheme === \"client_light\") {\n      SetScheme('space_gray');\n      connect.send(\"VKWebAppSetViewSettings\", {\n        \"status_bar_style\": \"light\",\n        \"action_bar_color\": \"#000\"\n      });\n    } else if (scheme === \"space_gray\" || scheme === \"client_dark\") {\n      SetScheme('bright_light');\n      connect.send(\"VKWebAppSetViewSettings\", {\n        \"status_bar_style\": \"dark\",\n        \"action_bar_color\": \"#fff\"\n      });\n    }\n  }\n\n  useEffect(function () {\n    //  Добавляем обработчик события изменения истории для работы аппаратных кнопок.\n    connect.subscribe(function (_ref) {\n      var _ref$detail = _ref.detail,\n          type = _ref$detail.type,\n          data = _ref$detail.data;\n\n      if (type === 'VKWebAppUpdateConfig') {\n        SetScheme(data.scheme);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(ConfigProvider, {\n    isWebView: true,\n    scheme: scheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default changetheme;","map":{"version":3,"sources":["C:/Users/Павел/Desktop/vkapp/nebuskins/src/panels/changetheme.js"],"names":["React","useState","useEffect","connect","View","ConfigProvider","changetheme","scheme","SetScheme","UpdateTheme","send","subscribe","detail","type","data"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,2CAAjB;AACA,OAAOC,cAAP,MAA2B,+DAA3B;AACA,OAAO,+BAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACGL,QAAQ,CAAC,cAAD,CADX;AAAA;AAAA,MAClBM,MADkB;AAAA,MACVC,SADU;;AAGzB,WAASC,WAAT,GAAuB;AACrB,QAAGF,MAAM,KAAK,cAAX,IAA6BA,MAAM,KAAK,cAA3C,EAA2D;AAC1DC,MAAAA,SAAS,CAAC,YAAD,CAAT;AACAL,MAAAA,OAAO,CAACO,IAAR,CAAa,yBAAb,EAAwC;AAAC,4BAAoB,OAArB;AAA8B,4BAAoB;AAAlD,OAAxC;AACA,KAHD,MAIK,IAAGH,MAAM,KAAK,YAAX,IAA2BA,MAAM,KAAK,aAAzC,EAAuD;AAC3DC,MAAAA,SAAS,CAAC,cAAD,CAAT;AACAL,MAAAA,OAAO,CAACO,IAAR,CAAa,yBAAb,EAAwC;AAAC,4BAAoB,MAArB;AAA6B,4BAAoB;AAAjD,OAAxC;AACA;AACF;;AAEDR,EAAAA,SAAS,CAAC,YAAM;AAAE;AACjBC,IAAAA,OAAO,CAACQ,SAAR,CAAkB,gBAA+B;AAAA,6BAA5BC,MAA4B;AAAA,UAAlBC,IAAkB,eAAlBA,IAAkB;AAAA,UAAZC,IAAY,eAAZA,IAAY;;AAChD,UAAID,IAAI,KAAK,sBAAb,EAAqC;AACpCL,QAAAA,SAAS,CAACM,IAAI,CAACP,MAAN,CAAT;AACA;AACD,KAJD;AAKA,GANQ,EAMN,EANM,CAAT;AAQA,sBACC,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAE,IAA3B;AAAiC,IAAA,MAAM,EAAEA,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAMA,CA5BD;;AA8BA,eAAeD,WAAf","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ConfigProvider from '@vkontakte/vkui/dist/components/ConfigProvider/ConfigProvider';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nconst changetheme = () => {\r\n\tconst [scheme, SetScheme] = useState(\"bright_light\")\r\n\r\n\tfunction UpdateTheme() {\r\n\t\t\tif(scheme === \"bright_light\" || scheme === \"client_light\") {\r\n\t\t\t\tSetScheme('space_gray');\r\n\t\t\t\tconnect.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"light\", \"action_bar_color\": \"#000\"});\r\n\t\t\t}\r\n\t\t\telse if(scheme === \"space_gray\" || scheme === \"client_dark\"){\r\n\t\t\t\tSetScheme('bright_light');\r\n\t\t\t\tconnect.send(\"VKWebAppSetViewSettings\", {\"status_bar_style\": \"dark\", \"action_bar_color\": \"#fff\"});\r\n\t\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => { //  Добавляем обработчик события изменения истории для работы аппаратных кнопок.\r\n\t\tconnect.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tSetScheme(data.scheme)\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\t \r\n\treturn (\r\n\t\t<ConfigProvider isWebView={true} scheme={scheme}>\r\n\t\t\t<View>\r\n\t\t\t</View>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default changetheme;"]},"metadata":{},"sourceType":"module"}