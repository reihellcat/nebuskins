{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\src\\\\panels\\\\NewApp\\\\TestFeed.js\";\n\nimport React from 'react';\nimport firebase from 'firebase';\nimport PropTypes from 'prop-types';\nimport { Div, Avatar, Banner, Button, CellButton, Header, Group, PanelHeader, Panel, Cell, PanelHeaderBack } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon24ThumbUp from '@vkontakte/icons/dist/24/thumb_up'; // function TestFeed(props) {\n//     const [skins, setSkins] = React.useState([])\n//     React.useEffect(() => {\n//         const fetchData = async () => {\n//             const db = firebase.firestore()\n//             const data = await db.collection(\"skins\").get()\n//             setSkins(data.docs.map(doc => doc.data()))\n//         }\n//         fetchData()\n//     }, [])\n//     return (\n//      <React.Fragment> \n//             {skins.map(skin => (\n// <Div key={skin.id}>\n//  <Banner style={{ blockSize: 95 }} size=\"l\"\n//         before={<Avatar size={96} mode=\"image\" src={skin.image} />}\n//         header={<React.Fragment>Предложил: {skin.nickname}</React.Fragment>}\n//         subheader={<React.Fragment>ID игрока: {skin.player_id}<br/>Категория: {skin.category}</React.Fragment>}\n//         // text={<Button after={skin.likes} mode=\"tertiary\" style={{ width: 10, height: 30 }}><Icon24ThumbUp style={{ width: 5, height: 5 }}/></Button>}\n//       />\n// </Div>\n// ))}\n//         </React.Fragment>\n//     );\n//             }\n// TestFeed.propTypes = {\n// \tid: PropTypes.string.isRequired,\n// \tgo: PropTypes.func.isRequired,\n// };\n\nvar TestFeed = function TestFeed(_ref) {\n  var id = _ref.id,\n      go = _ref.go,\n      fetchedUser = _ref.fetchedUser;\n  return /*#__PURE__*/React.createElement(Panel, {\n    id: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(PanelHeader, {\n    left: /*#__PURE__*/React.createElement(PanelHeaderBack, {\n      onClick: go,\n      \"data-to\": \"home\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, \"\\u041E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0435 \\u0441\\u043A\\u0438\\u043D\\u044B\"), /*#__PURE__*/React.createElement(Group, {\n    title: \"Navigation Example\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"xl\",\n    level: \"2\",\n    onClick: go,\n    \"data-to\": \"persik\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Show me the Persik, please\"))), /*#__PURE__*/React.createElement(Group, {\n    header: /*#__PURE__*/React.createElement(Header, {\n      mode: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }\n    }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CellButton, {\n    onClick: go,\n    \"data-to\": \"def_skins\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"\\u041E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0435 \\u0441\\u043A\\u0438\\u043D\\u044B\"), /*#__PURE__*/React.createElement(CellButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"\\u041F\\u0438\\u0442\\u043E\\u043C\\u0446\\u044B\"), /*#__PURE__*/React.createElement(CellButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"\\u0427\\u0430\\u0441\\u0442\\u0438\\u0446\\u044B\"), /*#__PURE__*/React.createElement(CellButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"\\u0421\\u043E\\u0431\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u044B\\u0439 \\u0444\\u043E\\u043D\")));\n};\n\nTestFeed.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired\n};\nexport default TestFeed;","map":{"version":3,"sources":["C:/Users/Павел/Desktop/vkapp/nebuskins/src/panels/NewApp/TestFeed.js"],"names":["React","firebase","PropTypes","Div","Avatar","Banner","Button","CellButton","Header","Group","PanelHeader","Panel","Cell","PanelHeaderBack","Icon24ThumbUp","TestFeed","id","go","fetchedUser","propTypes","string","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,UAAtC,EAAkDC,MAAlD,EAA0DC,KAA1D,EAAiEC,WAAjE,EAA8EC,KAA9E,EAAqFC,IAArF,EAA2FC,eAA3F,QAAkH,iBAAlH;AACA,OAAO,+BAAP;AAEA,OAAOC,aAAP,MAA0B,mCAA1B,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,EAAH,QAAGA,EAAH;AAAA,MAAOC,EAAP,QAAOA,EAAP;AAAA,MAAWC,WAAX,QAAWA,WAAX;AAAA,sBAChB,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAEF,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAa,IAAA,IAAI,eAAE,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAEC,EAA1B;AAA8B,iBAAQ,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADD,eAYC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,KAAK,EAAC,GAAxB;AAA4B,IAAA,OAAO,EAAEA,EAArC;AAAyC,eAAQ,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADD,CADD,CAZD,eAmBG,oBAAC,KAAD;AAAO,IAAA,MAAM,eAAE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,EAArB;AAAyB,eAAQ,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAFF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAHF,eAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAJF,CAnBH,CADgB;AAAA,CAAjB;;AA6BAF,QAAQ,CAACI,SAAT,GAAqB;AACpBH,EAAAA,EAAE,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UADD;AAEpBJ,EAAAA,EAAE,EAAEf,SAAS,CAACoB,IAAV,CAAeD;AAFC,CAArB;AAMA,eAAeN,QAAf","sourcesContent":["import React from 'react';\r\nimport firebase from 'firebase';\r\nimport PropTypes from 'prop-types';\r\nimport { Div, Avatar, Banner, Button, CellButton, Header, Group, PanelHeader, Panel, Cell, PanelHeaderBack } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Icon24ThumbUp from '@vkontakte/icons/dist/24/thumb_up';\r\n\r\n// function TestFeed(props) {\r\n//     const [skins, setSkins] = React.useState([])\r\n\r\n//     React.useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             const db = firebase.firestore()\r\n//             const data = await db.collection(\"skins\").get()\r\n//             setSkins(data.docs.map(doc => doc.data()))\r\n//         }\r\n//         fetchData()\r\n//     }, [])\r\n\r\n\r\n//     return (\r\n//      <React.Fragment> \r\n                 \r\n//             {skins.map(skin => (\r\n// <Div key={skin.id}>\r\n//  <Banner style={{ blockSize: 95 }} size=\"l\"\r\n//         before={<Avatar size={96} mode=\"image\" src={skin.image} />}\r\n//         header={<React.Fragment>Предложил: {skin.nickname}</React.Fragment>}\r\n//         subheader={<React.Fragment>ID игрока: {skin.player_id}<br/>Категория: {skin.category}</React.Fragment>}\r\n//         // text={<Button after={skin.likes} mode=\"tertiary\" style={{ width: 10, height: 30 }}><Icon24ThumbUp style={{ width: 5, height: 5 }}/></Button>}\r\n//       />\r\n// </Div>\r\n// ))}\r\n//         </React.Fragment>\r\n//     );\r\n//             }\r\n// TestFeed.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst TestFeed = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>}>Обычные скины</PanelHeader>\r\n\t\t{/* {fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>} */}\r\n\r\n\t\t<Group title=\"Navigation Example\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\r\n\t\t\t\t\tShow me the Persik, please\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n    <Group header={<Header mode=\"secondary\">Выберите категорию</Header>}>\r\n      <CellButton onClick={go} data-to=\"def_skins\" >Обычные скины</CellButton>\r\n      <CellButton>Питомцы</CellButton>\r\n      <CellButton>Частицы</CellButton>\r\n      <CellButton>Собственный фон</CellButton>\r\n    </Group>\r\n\t</Panel>\r\n);\r\n\r\nTestFeed.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default TestFeed;"]},"metadata":{},"sourceType":"module"}