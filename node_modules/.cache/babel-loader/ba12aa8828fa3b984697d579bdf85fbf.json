{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u0430\\u0432\\u0435\\u043B\\\\Desktop\\\\vkapp\\\\nebuskins\\\\src\\\\panels\\\\NewApp\\\\TestFeed.js\";\n\nimport React from 'react';\nimport firebase from 'firebase';\nimport PropTypes from 'prop-types';\nimport { Div, Avatar, Banner, PanelHeaderButton, Search, List, Button, Header, Group, PanelHeader, Panel, Cell, PanelHeaderBack } from '@vkontakte/vkui';\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport Icon24ThumbUp from '@vkontakte/icons/dist/24/thumb_up';\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline'; // function TestFeed(props) {\n//     const [skins, setSkins] = React.useState([])\n//     React.useEffect(() => {\n//         const fetchData = async () => {\n//             const db = firebase.firestore()\n//             const data = await db.collection(\"skins\").get()\n//             setSkins(data.docs.map(doc => doc.data()))\n//         }\n//         fetchData()\n//     }, [])\n//     return (\n//      <React.Fragment> \n//             {skins.map(skin => (\n// <Div key={skin.id}>\n//  <Banner style={{ blockSize: 95 }} size=\"l\"\n//         before={<Avatar size={96} mode=\"image\" src={skin.image} />}\n//         header={<React.Fragment>Предложил: {skin.nickname}</React.Fragment>}\n//         subheader={<React.Fragment>ID игрока: {skin.player_id}<br/>Категория: {skin.category}</React.Fragment>}\n//         // text={<Button after={skin.likes} mode=\"tertiary\" style={{ width: 10, height: 30 }}><Icon24ThumbUp style={{ width: 5, height: 5 }}/></Button>}\n//       />\n// </Div>\n// ))}\n//         </React.Fragment>\n//     );\n//             }\n// TestFeed.propTypes = {\n// \tid: PropTypes.string.isRequired,\n// \tgo: PropTypes.func.isRequired,\n// };\n\nvar TestFeed = function TestFeed(_ref) {\n  var id = _ref.id,\n      go = _ref.go,\n      skins = _ref.skins;\n  return /*#__PURE__*/React.createElement(Panel, {\n    id: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(PanelHeader, {\n    left: /*#__PURE__*/React.createElement(PanelHeaderBack, {\n      onClick: go,\n      \"data-to\": \"home\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, \"\\u041E\\u0431\\u044B\\u0447\\u043D\\u044B\\u0435 \\u0441\\u043A\\u0438\\u043D\\u044B\"), /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, skins.map(function (skin) {\n    return /*#__PURE__*/React.createElement(Div, {\n      key: skins.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      style: {\n        blockSize: 95\n      },\n      size: \"l\",\n      before: /*#__PURE__*/React.createElement(Avatar, {\n        size: 96,\n        mode: \"image\",\n        src: skin.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }\n      }),\n      header: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }\n      }, \"\\u041F\\u0440\\u0435\\u0434\\u043B\\u043E\\u0436\\u0438\\u043B: \", skin.nickname),\n      subheader: /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }\n      }, \"ID \\u0438\\u0433\\u0440\\u043E\\u043A\\u0430: \", skin.player_id, /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 69\n        }\n      }), \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F: \", skin.category),\n      text: /*#__PURE__*/React.createElement(Button, {\n        after: skin.likes,\n        mode: \"tertiary\",\n        style: {\n          width: 10,\n          height: 30\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Icon24ThumbUp, {\n        style: {\n          width: 5,\n          height: 5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 98\n        }\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }\n    }));\n  })));\n};\n\nTestFeed.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  skins: PropTypes.func.isRequired\n};\nexport default TestFeed;","map":{"version":3,"sources":["C:/Users/Павел/Desktop/vkapp/nebuskins/src/panels/NewApp/TestFeed.js"],"names":["React","firebase","PropTypes","Div","Avatar","Banner","PanelHeaderButton","Search","List","Button","Header","Group","PanelHeader","Panel","Cell","PanelHeaderBack","Icon24ThumbUp","Icon28AddOutline","TestFeed","id","go","skins","map","skin","blockSize","image","nickname","player_id","category","likes","width","height","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport firebase from 'firebase';\r\nimport PropTypes from 'prop-types';\r\nimport { Div, Avatar, Banner, PanelHeaderButton, Search, List, Button, Header, Group, PanelHeader, Panel, Cell, PanelHeaderBack } from '@vkontakte/vkui';\r\nimport \"@vkontakte/vkui/dist/vkui.css\";\r\n\r\nimport Icon24ThumbUp from '@vkontakte/icons/dist/24/thumb_up';\r\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\r\n\r\n// function TestFeed(props) {\r\n//     const [skins, setSkins] = React.useState([])\r\n\r\n//     React.useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             const db = firebase.firestore()\r\n//             const data = await db.collection(\"skins\").get()\r\n//             setSkins(data.docs.map(doc => doc.data()))\r\n//         }\r\n//         fetchData()\r\n//     }, [])\r\n\r\n\r\n//     return (\r\n//      <React.Fragment> \r\n                 \r\n//             {skins.map(skin => (\r\n// <Div key={skin.id}>\r\n//  <Banner style={{ blockSize: 95 }} size=\"l\"\r\n//         before={<Avatar size={96} mode=\"image\" src={skin.image} />}\r\n//         header={<React.Fragment>Предложил: {skin.nickname}</React.Fragment>}\r\n//         subheader={<React.Fragment>ID игрока: {skin.player_id}<br/>Категория: {skin.category}</React.Fragment>}\r\n//         // text={<Button after={skin.likes} mode=\"tertiary\" style={{ width: 10, height: 30 }}><Icon24ThumbUp style={{ width: 5, height: 5 }}/></Button>}\r\n//       />\r\n// </Div>\r\n// ))}\r\n//         </React.Fragment>\r\n//     );\r\n//             }\r\n// TestFeed.propTypes = {\r\n// \tid: PropTypes.string.isRequired,\r\n// \tgo: PropTypes.func.isRequired,\r\n// };\r\n\r\n\r\nconst TestFeed = ({ id, go, skins}) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>}>Обычные скины</PanelHeader>\r\n\t\t<React.Fragment> \r\n                 \r\n\t\t\t\t              {skins.map(skin => (\r\n\t\t\t\t <Div key={skins.id}>\r\n\t\t\t\t   <Banner style={{ blockSize: 95 }} size=\"l\"\r\n\t\t\t\t          before={<Avatar size={96} mode=\"image\" src={skin.image} />}\r\n\t\t\t\t          header={<React.Fragment>Предложил: {skin.nickname}</React.Fragment>}\r\n\t\t\t\t          subheader={<React.Fragment>ID игрока: {skin.player_id}<br/>Категория: {skin.category}</React.Fragment>}\r\n\t\t\t\t          text={<Button after={skin.likes} mode=\"tertiary\" style={{ width: 10, height: 30 }}><Icon24ThumbUp style={{ width: 5, height: 5 }}/></Button>}\r\n\t\t\t\t        />\r\n\t\t\t\t  </Div>\r\n\t\t\t\t  ))}\r\n\t\t\t\t          </React.Fragment>\r\n\t </Panel>\r\n\t )\r\n\t \r\n\r\n\r\nTestFeed.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tskins: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TestFeed;"]},"metadata":{},"sourceType":"module"}